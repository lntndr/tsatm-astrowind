---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import type { Testimonials as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="grid lg:grid-cols-2 gap-6">
    {
      testimonials &&
        testimonials.map(({ title, testimonial, name, job, image }) => (
          <div class="flex h-auto">
            <div class="flex flex-col rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-600 h-full">
              <div class="p-4 md:p-6 flex-grow flex flex-col">
                <div class="flex-grow">
                  {title && <h2 class="text-xl font-medium leading-6 pb-4 pt-2">{title}</h2>}
                  {testimonial && (
                    <blockquote class="flex-auto">
                      <p set:html={testimonial} class="font-serif text-lg leading-snug"> </p>
                    </blockquote>
                  )}
                </div>

                <div class="mt-auto">
                  <hr class="border-slate-200 dark:border-slate-600 my-4" />

                  <div class="flex items-center">
                    {image && (
                      <div class="h-12 w-12 flex-shrink-0">
                        {typeof image === 'string' ? (
                          <Fragment set:html={image} />
                        ) : (
                          <Image
                            class="h-12 w-12 min-w-full min-h-full rounded-md"
                            width={48}
                            height={48} 
                            widths={[400, 768]}
                            objectFit='cover'
                            objectPosition='top'
                            {...image}
                          />
                        )}
                      </div>
                    )}

                    <div class="grow ml-3 rtl:ml-0 rtl:mr-3 flex flex-col justify-center -space-y-1">
                      {name && <p class="text-lg font-semibold leading-none">{name}</p>}
                      {job && <p class="text-sm text-muted leading-none">{job}</p>}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))
    }
  </div>
  {
    callToAction && (
      <div class="flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>
